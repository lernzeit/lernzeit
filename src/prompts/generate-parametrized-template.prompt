# CONTEXT  
Du bist Experte f√ºr curriculum-konforme parametrisierte Template-Generierung mit integrierten Quality-Gates und Lehrplan-Awareness.

# AUFGABE
Erstelle genau **eine** hochwertige parametrisierte Aufgaben-Vorlage im folgenden JSON-Schema:
{
  "grade": {{grade}},
  "quarter_app": "{{quarter}}",
  "domain": "{{domain}}",
  "subcategory": "<<Lehrplan-konforme Unterkategorie>>",
  "difficulty": "{{difficulty}}",
  "question_type": "{{variant}}",
  "student_prompt": "<<Template mit {parameter} Platzhaltern - KEIN A:/B:/C:!>>",
  "parameter_definitions": {
    "zahl1": { 
      "type": "number", 
      "min": "<<curriculum_basiert>>", 
      "max": "<<curriculum_basiert>>",
      "context": "{{domain}}_appropriate" 
    },
    "zahl2": { 
      "type": "number", 
      "min": "<<curriculum_basiert>>", 
      "max": "<<curriculum_basiert>>",
      "relationship": "compatible_with_zahl1" 
    },
    "name": { 
      "type": "word", 
      "category": "age_appropriate_names",
      "grade_level": {{grade}}
    },
    "gegenstand": { 
      "type": "word", 
      "category": "context_objects",
      "domain": "{{domain}}",
      "grade_appropriate": true
    }
  },
  "curriculum_rules": {
    "grade": {{grade}},
    "quarter": "{{quarter}}",
    "domain": "{{domain}}",
    "zahlenraum_min": "<<Lehrplan-Minimum>>",
    "zahlenraum_max": "<<Lehrplan-Maximum>>",
    "operation_types": "<<Erlaubte Operationen>>",
    "complexity_level": "{{difficulty}}",
    "contexts": "<<Altersgerechte Kontexte>>",
    "prerequisites": "<<Vorwissen-Anforderungen>>"
  },
  "solution": {
    "type": "calculation",
    "formula": "<<Parameter-basierte L√∂sungsformel>>",
    "result_validation": "<<Ergebnis-Validierung>>"
  },
  "distractors": [
    "<<H√§ufiger Fehler 1 mit Parametern>>",
    "<<H√§ufiger Fehler 2 mit Parametern>>", 
    "<<H√§ufiger Fehler 3 mit Parametern>>"
  ],
  "explanation": "<<Kindgerechte Erkl√§rung mit Parametern>>",
  "quality_score": 0.85
}

# CURRICULUM-BEWUSSTE PARAMETER-SYSTEME

## Dynamische Zahlenraum-Bestimmung f√ºr Klasse {{grade}} Quartal {{quarter}}:

### Pr√§zise Lehrplan-Zuordnung:
- **Klasse 1 Q1**: ZR 1-10, Addition bis 10, Kontexte: Spielzeug, Fr√ºchte, Tiere
- **Klasse 1 Q2**: ZR 1-20, Addition/Subtraktion ohne √úbergang, erste Sachaufgaben
- **Klasse 1 Q3**: ZR 1-20, Addition/Subtraktion mit √úbergang, Zehnerfreunde  
- **Klasse 1 Q4**: ZR 1-100, Zehner/Einer, erste Multiplikation (Verdoppeln)
- **Klasse 2 Q1**: ZR 1-100, sicheres ¬±, Einmaleins-Vorbereitung
- **Klasse 2 Q2**: Einmaleins 2er/5er/10er, erste Division
- **Klasse 2 Q3**: Einmaleins 3er/4er/6er/7er/8er/9er, Division sichern
- **Klasse 2 Q4**: Einmaleins automatisieren, Sachaufgaben mit √ó√∑  
- **Klasse 3 Q1**: ZR 1000, schriftliche +/-, Runden
- **Klasse 3 Q2**: Schriftliche √ó, √∑ einstellig, Gr√∂√üen
- **Klasse 3 Q3**: √∑ mit Rest, Br√ºche einf√ºhrend, Fl√§chen/Umfang
- **Klasse 3 Q4**: Dezimalzahlen (Euro/Cent), schriftliche √∑ sichern
- **Klasse 4 Q1**: ZR 1.000.000, alle schriftlichen Verfahren
- **Klasse 4 Q2**: Br√ºche erweitert, Dezimalzahlen rechnen
- **Klasse 4 Q3**: Gr√∂√üen umrechnen, Ma√üstab, Zeit
- **Klasse 4 Q4**: Geometrie vertiefen, Daten/Diagramme
- **Klasse 5+**: Negative Zahlen, Bruchrechnung, Prozent, Terme, Gleichungen

### Kontexte nach Entwicklungsstufe:
- **Klasse 1-2**: Familie (Mama, Papa, Oma), Haustiere (Hund, Katze), Spielsachen (Ball, Puppe), Obst (Apfel, Birne)
- **Klasse 3-4**: Schule (Klasse, Pausenhof), Sport (Fu√üball, Schwimmen), Natur (Wald, Park), Hobbys (Sammeln, Basteln)  
- **Klasse 5-7**: Technik (Computer, Handy), Umwelt (Recycling, Energie), Reisen (St√§dte, L√§nder), Wissenschaft (Experimente)
- **Klasse 8-10**: Berufswelt (Ingenieur, Forschung), Gesellschaft (Politik, Wirtschaft), globale Themen (Klimawandel, Digitalisierung)

# PARAMETER-PLATZHALTER VERWENDEN

**WICHTIG**: Verwende IMMER Platzhalter wie {zahl1}, {zahl2}, {name}, {gegenstand} statt konkreter Werte!

## Beispiele f√ºr parametrisierte Templates:

### **Multiple Choice Beispiel:**
```json
{
  "student_prompt": "{name} hat {zahl1} {gegenstand}. {name} bekommt {zahl2} {gegenstand} dazu. Wie viele {gegenstand} hat {name} jetzt?",
  "parameter_definitions": {
    "zahl1": { "type": "number", "curriculum_rule": "zahlenraum_grade_quarter" },
    "zahl2": { "type": "number", "curriculum_rule": "zahlenraum_grade_quarter" },
    "name": { "type": "word", "curriculum_rule": "age_appropriate_names" },
    "gegenstand": { "type": "word", "curriculum_rule": "context_objects" }
  },
  "solution": "{zahl1} + {zahl2}",
  "distractors": ["{zahl1} - {zahl2}", "{zahl1} √ó {zahl2}", "{zahl1} + {zahl2} + 1"]
}
```

### **Freitext Beispiel:**
```json
{
  "student_prompt": "Berechne: {zahl1} √ó {zahl2} = ?",
  "parameter_definitions": {
    "zahl1": { "type": "number", "curriculum_rule": "multiplication_range" },
    "zahl2": { "type": "number", "curriculum_rule": "multiplication_range" }
  },
  "solution": "{zahl1} √ó {zahl2}"
}
```

# ADVANCED QUALITY ASSURANCE

## STRUKTURELLE TEMPLATE-VALIDIERUNG
- **NO-OPTION-MIXING**: student_prompt enth√§lt NIEMALS "A:", "B:", "C:" Optionen
- **PARAMETER-INTEGRITY**: Alle {parameter} haben korrekte Definitionen
- **SOLUTION-CONSISTENCY**: L√∂sung ergibt sich mathematisch korrekt aus Parametern
- **DISTRACTOR-QUALITY**: Falsche Antworten basieren auf realistischen Sch√ºlerfehlern

## MATHEMATISCHE ROBUSTHEIT  
- **ALLE Parameter-Kombinationen** f√ºhren zu validen, l√∂sbare Aufgaben
- **ERGEBNIS-BEREICHE**: L√∂sungen liegen in altersgerechten, handhabbare Zahlenr√§ume
- **EDGE-CASE-HANDLING**: Keine Division durch Null, keine negativen Ergebnisse (au√üer explizit erw√ºnscht)
- **OPERATION-VALIDITY**: Nur lehrplan-konforme mathematische Operationen

## CURRICULUM DEEP-COMPLIANCE
- **PRECISE-ALIGNMENT**: Parameter exakt nach Klassenstufe {{grade}} Quartal {{quarter}}
- **SKILL-PROGRESSION**: Template baut auf korrektem Vorwissen auf
- **DOMAIN-FOCUS**: Inhalt entspricht {{domain}} Anforderungen
- **DIFFICULTY-MATCHING**: {{difficulty}} Level realistisch f√ºr Zielgruppe

## LINGUISTISCHE & KOGNITIVE QUALIT√ÑT
- **AGE-APPROPRIATE**: Sprache, Kontext und Komplexit√§t der Altersgruppe angemessen
- **COGNITIVE-LOAD**: Nicht √ºberfordernd, aber herausfordernd  
- **CULTURAL-SENSITIVITY**: Namen und Kontexte kulturell diverse und inklusive
- **CLARITY-CHECK**: Eindeutige, unmissverst√§ndliche Aufgabenstellung

# CONSTRAINTS
1. **QUALITY GATES**: Template muss alle obigen Quality‚ÄëChecks bestehen
2. **CURRICULUM ADHERENCE**: Exakte Einhaltung der Curriculum‚ÄëRules
3. **PARAMETER VALIDATION**: Parameter‚ÄëDefinitionen M√úSSEN korrekt definiert werden
4. **AGE APPROPRIATENESS**: Altersgerechte Kontexte (Namen, Gegenst√§nde, Situationen)
5. **VISUAL CONSTRAINTS**: Keine Zeichnungen, Bilder, Konstruktionen! 
   AUSNAHME: Klasse 1 Q1 darf einfache Emoji‚ÄëZ√§hlaufgaben (üçéüçè etc.)
6. **OUTPUT FORMAT**: Liefere nur das JSON‚ÄëTemplate, keine Kommentare!

# TYPE-SPECIFIC TEMPLATE RULES

## SORT-TEMPLATE SPEZIFIKATION ({{variant}}="sort")
- **STUDENT_PROMPT**: Muss sortierbare Elemente enthalten: "Bringe in die richtige Reihenfolge: {item1}, {item2}, {item3}, {item4}"
- **SOLUTION FORMAT**: `{"type": "array", "formula": "[{item1}, {item2}, {item3}, {item4}]", "order": "chronological|numerical|alphabetical"}`
- **PARAMETER_RULES**: Items m√ºssen curriculum-kompatibel und eindeutig sortierbar sein
- **VALIDATION**: Mindestens 3, maximal 6 Parameter f√ºr Sortier-Items

## MATCH-TEMPLATE SPEZIFIKATION ({{variant}}="match")  
- **STUDENT_PROMPT**: Zuordnungsaufgabe: "Ordne {begriff1} zu {definition1}, {begriff2} zu {definition2}, {begriff3} zu {definition3}"
- **SOLUTION FORMAT**: `{"type": "pairs", "formula": "{begriff1: definition1, begriff2: definition2, begriff3: definition3}"}`
- **PARAMETER_RULES**: Begriffe und Definitionen m√ºssen eindeutig zuordenbar und altersgerecht sein
- **VALIDATION**: Mindestens 3 Begriff-Definition-Paare

## FREETEXT-TEMPLATE SPEZIFIKATION ({{variant}}="freetext")
- **STUDENT_PROMPT**: Berechnungsaufgabe OHNE Auswahloptionen: "Berechne: {zahl1} + {zahl2} = ?"
- **SOLUTION FORMAT**: `{"type": "calculation", "formula": "{zahl1} + {zahl2}", "result_type": "number"}`
- **ANTI-PATTERN**: NIEMALS "W√§hle aus A/B/C" bei freetext Templates
- **VALIDATION**: Eindeutige mathematische Formel als L√∂sung

## MULTIPLE_CHOICE-TEMPLATE SPEZIFIKATION ({{variant}}="multiple_choice")
- **STUDENT_PROMPT**: Fragestellung OHNE A:/B:/C: "Wie viel ist {zahl1} √ó {zahl2}?"
- **SOLUTION FORMAT**: `{"type": "calculation", "formula": "{zahl1} √ó {zahl2}"}`
- **DISTRACTORS**: M√ºssen parametrisiert sein: `["{zahl1} + {zahl2}", "{zahl1} - {zahl2}", "{zahl1} √ó {zahl2} + 1"]`
- **VALIDATION**: Exakt 3 parametrisierte Distraktoren

## ENHANCED PARAMETER VALIDATION
```
TYPE-COMPLIANCE CHECK:
‚úÖ SORT: Parameter f√ºr sortierbare Items (zeit, gr√∂√üe, alphabet)
‚úÖ MATCH: Parameter f√ºr Begriffe UND Definitionen
‚úÖ FREETEXT: Parameter f√ºr Berechnung ohne Auswahloptionen  
‚úÖ MULTIPLE_CHOICE: Parameter f√ºr Frage UND parametrisierte Distraktoren
```

## STRICT ANTI-PATTERN RULES
- **SORT**: Keine Berechnungen, nur sortierbare Sequenzen
- **MATCH**: Keine mathematischen Operationen, nur Zuordnungen
- **FREETEXT**: Keine Auswahloptionen im Prompt, nur offene Eingabe
- **MULTIPLE_CHOICE**: Keine Sortierung oder Zuordnung, nur Auswahl

## PARAMETER INTEGRITY VALIDATION
- **DEPENDENCY CHECK**: Parameter m√ºssen mathematisch/logisch kompatibel sein
- **RANGE VALIDATION**: Zahlenr√§ume curriculum-konform f√ºr Grade {{grade}}
- **CONTEXT CONSISTENCY**: Alle Parameter passen zum gew√§hlten Kontext
- **OUTPUT VALIDATION**: Alle Parameter-Kombinationen f√ºhren zu validen L√∂sungen

# FINAL TEMPLATE VALIDATION (ERWEITERT)
Vor Ausgabe ZWINGEND pr√ºfen:
1. ‚úÖ student_prompt enth√§lt KEINE A:/B:/C: Optionen (nur bei multiple_choice erlaubt)
2. ‚úÖ Alle {parameter} haben korrekte parameter_definitions
3. ‚úÖ solution.formula ist mathematisch korrekt f√ºr alle Parameter-Kombinationen
4. ‚úÖ distractors sind parametrisiert und erzeugen plausible Fehler
5. ‚úÖ question_type entspricht exakt dem gew√§hlten {{variant}}
6. ‚úÖ curriculum_rules sind vollst√§ndig und grade-spezifisch
7. ‚úÖ quality_score ‚â• 0.85 durch alle Quality-Gates
8. ‚úÖ JSON ist strukturell valide und template-spezifisch korrekt

# AUSGABE
Liefere **nur das JSON-Template** ‚Äì keine Kommentare, kein Markdown.